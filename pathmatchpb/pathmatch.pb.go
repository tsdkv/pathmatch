// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.17.3
// source: pathmatch.proto

package pathmatchpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PathTemplate defines the abstract syntax tree (AST) for a parsed path pattern.
// This structure is used to store and interpret path matching rules.
//
// The grammar for path templates can be summarized as:
// Template = "/" [ Segments ] ;
// Segments = Segment { "/" Segment } ;
// Segment  = "*" | "**" | LITERAL | Variable ;
// Variable = "{" LITERAL [ "=" Segments ] "}" ;  // LITERAL here is the variable name
//
// Examples:
// - /users/{id}/profile
// - /files/**
// - /archive/{year}/{month=**}
// - /v1/books/{book_id}
// - /
type PathTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segments []*Segment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *PathTemplate) Reset() {
	*x = PathTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathTemplate) ProtoMessage() {}

func (x *PathTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathTemplate.ProtoReflect.Descriptor instead.
func (*PathTemplate) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{0}
}

func (x *PathTemplate) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

// Segment represents a single component of a path template.
type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Segment:
	//
	//	*Segment_Literal
	//	*Segment_Variable
	//	*Segment_Star
	//	*Segment_DoubleStar
	Segment isSegment_Segment `protobuf_oneof:"segment"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{1}
}

func (m *Segment) GetSegment() isSegment_Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (x *Segment) GetLiteral() *Literal {
	if x, ok := x.GetSegment().(*Segment_Literal); ok {
		return x.Literal
	}
	return nil
}

func (x *Segment) GetVariable() *Variable {
	if x, ok := x.GetSegment().(*Segment_Variable); ok {
		return x.Variable
	}
	return nil
}

func (x *Segment) GetStar() *Star {
	if x, ok := x.GetSegment().(*Segment_Star); ok {
		return x.Star
	}
	return nil
}

func (x *Segment) GetDoubleStar() *DoubleStar {
	if x, ok := x.GetSegment().(*Segment_DoubleStar); ok {
		return x.DoubleStar
	}
	return nil
}

type isSegment_Segment interface {
	isSegment_Segment()
}

type Segment_Literal struct {
	Literal *Literal `protobuf:"bytes,1,opt,name=literal,proto3,oneof"`
}

type Segment_Variable struct {
	Variable *Variable `protobuf:"bytes,2,opt,name=variable,proto3,oneof"`
}

type Segment_Star struct {
	Star *Star `protobuf:"bytes,3,opt,name=star,proto3,oneof"`
}

type Segment_DoubleStar struct {
	DoubleStar *DoubleStar `protobuf:"bytes,4,opt,name=doubleStar,proto3,oneof"`
}

func (*Segment_Literal) isSegment_Segment() {}

func (*Segment_Variable) isSegment_Segment() {}

func (*Segment_Star) isSegment_Segment() {}

func (*Segment_DoubleStar) isSegment_Segment() {}

// Literal represents a fixed string segment in a path.
type Literal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The string value of the literal segment.
	// e.g., "users", "profile".
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Literal) Reset() {
	*x = Literal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Literal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Literal) ProtoMessage() {}

func (x *Literal) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Literal.ProtoReflect.Descriptor instead.
func (*Literal) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{2}
}

func (x *Literal) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Variable represents a named placeholder in a path template.
// It can match a single segment (e.g., "{id}") or multiple segments
// if a sub-pattern is defined (e.g., "{filePath=/docs/**}").
//
// Limitations:
//   - Nested variables (e.g., "{outer={inner}}") are not allowed.
//   - The sub-pattern defined after '=' (e.g., in "{name=pattern}") cannot itself
//     contain variables. It can only contain literals, single wildcards ('*'),
//     or a double wildcard ('**') at the very end of the pattern.
type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the variable, e.g., "id" in "{id}".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. If present, defines a sub-pattern that the variable must match.
	// e.g., for "{filePath=/docs/**}", segments would represent "/docs/**".
	// If the variable is simple (e.g., "{id}"), this list will be empty.
	Segments []*Segment `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"` // e.g. "foo/*" or "**"
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{3}
}

func (x *Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variable) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

// Star represents a single-segment wildcard character ('*').
// It matches exactly one segment in the path.
type Star struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Star) Reset() {
	*x = Star{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Star) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Star) ProtoMessage() {}

func (x *Star) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Star.ProtoReflect.Descriptor instead.
func (*Star) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{4}
}

// DoubleStar represents a multi-segment wildcard character ('**').
// It matches zero or more path segments.
// It must be the last segment in the main path template or in a variable's sub-pattern.
type DoubleStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoubleStar) Reset() {
	*x = DoubleStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pathmatch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleStar) ProtoMessage() {}

func (x *DoubleStar) ProtoReflect() protoreflect.Message {
	mi := &file_pathmatch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleStar.ProtoReflect.Descriptor instead.
func (*DoubleStar) Descriptor() ([]byte, []int) {
	return file_pathmatch_proto_rawDescGZIP(), []int{5}
}

var File_pathmatch_proto protoreflect.FileDescriptor

var file_pathmatch_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x61, 0x74, 0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x3e, 0x0a, 0x0c,
	0x50, 0x61, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x61, 0x74, 0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd7, 0x01, 0x0a,
	0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x69, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x74, 0x68,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x07, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x74,
	0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x74, 0x68,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x74, 0x68,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x22,
	0x0c, 0x0a, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x42, 0x1b, 0x5a,
	0x19, 0x2e, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x70, 0x62, 0x3b, 0x70,
	0x61, 0x74, 0x68, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pathmatch_proto_rawDescOnce sync.Once
	file_pathmatch_proto_rawDescData = file_pathmatch_proto_rawDesc
)

func file_pathmatch_proto_rawDescGZIP() []byte {
	file_pathmatch_proto_rawDescOnce.Do(func() {
		file_pathmatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_pathmatch_proto_rawDescData)
	})
	return file_pathmatch_proto_rawDescData
}

var file_pathmatch_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pathmatch_proto_goTypes = []interface{}{
	(*PathTemplate)(nil), // 0: pathmatch.PathTemplate
	(*Segment)(nil),      // 1: pathmatch.Segment
	(*Literal)(nil),      // 2: pathmatch.Literal
	(*Variable)(nil),     // 3: pathmatch.Variable
	(*Star)(nil),         // 4: pathmatch.Star
	(*DoubleStar)(nil),   // 5: pathmatch.DoubleStar
}
var file_pathmatch_proto_depIdxs = []int32{
	1, // 0: pathmatch.PathTemplate.segments:type_name -> pathmatch.Segment
	2, // 1: pathmatch.Segment.literal:type_name -> pathmatch.Literal
	3, // 2: pathmatch.Segment.variable:type_name -> pathmatch.Variable
	4, // 3: pathmatch.Segment.star:type_name -> pathmatch.Star
	5, // 4: pathmatch.Segment.doubleStar:type_name -> pathmatch.DoubleStar
	1, // 5: pathmatch.Variable.segments:type_name -> pathmatch.Segment
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pathmatch_proto_init() }
func file_pathmatch_proto_init() {
	if File_pathmatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pathmatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pathmatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pathmatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Literal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pathmatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pathmatch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Star); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pathmatch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pathmatch_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Segment_Literal)(nil),
		(*Segment_Variable)(nil),
		(*Segment_Star)(nil),
		(*Segment_DoubleStar)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pathmatch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pathmatch_proto_goTypes,
		DependencyIndexes: file_pathmatch_proto_depIdxs,
		MessageInfos:      file_pathmatch_proto_msgTypes,
	}.Build()
	File_pathmatch_proto = out.File
	file_pathmatch_proto_rawDesc = nil
	file_pathmatch_proto_goTypes = nil
	file_pathmatch_proto_depIdxs = nil
}
